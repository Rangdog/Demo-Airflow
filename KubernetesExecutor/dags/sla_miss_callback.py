from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime, timedelta
import time

# Callback s·∫Ω g·ªçi khi vi ph·∫°m SLA
def sla_miss_callback(dag, task_list, blocking_task_list, slas, blocking_tis):
    print("üö® SLA Miss Callback Triggered!")
    print(f"‚ö†Ô∏è Task(s) missed SLA: {task_list}")
    print(f"üîç DAG: {dag.dag_id}")
    print(f"‚è∞ At: {datetime.now()}")

# Task gi·∫£ l·∫≠p ch·∫°y l√¢u (v√≠ d·ª•: 60 gi√¢y)
def long_running_task():
    print("‚è≥ Starting long task...")
    time.sleep(60)  # deliberately exceed SLA
    print("‚úÖ Task finished!")

with DAG(
    dag_id="sla_demo_dag",
    start_date=datetime(2024, 1, 1),
    schedule_interval=None,
    catchup=False,
    sla_miss_callback=sla_miss_callback,
    tags=["sla", "demo"]
) as dag:

    task_with_sla = PythonOperator(
        task_id="long_task_with_sla",
        python_callable=long_running_task,
        sla=timedelta(seconds=30),  # ƒë·∫∑t SLA nh·ªè h∆°n th·ªùi gian th·ª±c t·∫ø
    )
